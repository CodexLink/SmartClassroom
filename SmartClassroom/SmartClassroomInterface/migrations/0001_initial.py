# Generated by Django 3.0.2 on 2020-01-25 10:40

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roomClassName', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(50)])),
                ('roomClassBuilding', models.PositiveIntegerField(choices=[(1, 'Building 1'), (2, 'Building 2'), (3, 'Building 3'), (4, 'Building 4'), (5, 'Building 5'), (6, 'Building 6'), (7, 'Building 7'), (8, 'Building 8'), (9, 'Building 9'), (10, 'PE CNTR 1'), (11, 'PE CNTR 2')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(11)])),
                ('roomClassFloor', models.PositiveIntegerField(choices=[(0, 'Ground Floor'), (1, '1st Floor'), (2, '2nd Floor'), (3, '3rd Floor'), (4, '4th Floor'), (5, '5th Floor')], default=(0, 'Ground Floor'), validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('roomClassNumber', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(29)])),
                ('roomClassType', models.CharField(choices=[(1, 'Technology'), (2, 'Laboratory'), (3, 'External Env.')], default=(1, 'Technology'), max_length=15)),
                ('roomClassReferrable', models.CharField(max_length=6, unique=True, validators=[django.core.validators.MinLengthValidator(6), django.core.validators.MaxLengthValidator(6)])),
            ],
        ),
        migrations.CreateModel(
            name='ProgramClasses',
            fields=[
                ('prog_name', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(50)])),
                ('prog_description', models.TextField(blank=True, max_length=255, null=True, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(255)])),
                ('prog_code', models.CharField(choices=[(1, 'Arch'), (2, 'CE'), (3, 'CpE'), (4, 'EE'), (5, 'ECE'), (6, 'EnSE'), (7, 'IE'), (8, 'ME')], max_length=10, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.MaxLengthValidator(10)])),
            ],
        ),
        migrations.CreateModel(
            name='CourseSets',
            fields=[
                ('courseSts_Name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(100)])),
                ('courseSts_Code', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.MaxLengthValidator(10)])),
                ('courseSts_Units', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)])),
                ('courseSts_Capacity', models.PositiveIntegerField(default=15, validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(60)])),
                ('courseSts_Type', models.CharField(choices=[(1, 'Technology'), (2, 'Laboratory'), (3, 'External Env.')], default=(1, 'Technology'), max_length=15, unique=True)),
            ],
            options={
                'unique_together': {('courseSts_Code', 'courseSts_Type')},
            },
        ),
        migrations.CreateModel(
            name='SectionGroups',
            fields=[
                ('secBaseName', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(50)])),
                ('secBaseDescrip', models.TextField(blank=True, max_length=255, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(255)])),
                ('secBaseProg', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='SmartClassroomInterface.ProgramClasses')),
                ('secYear', models.PositiveIntegerField(choices=[(1, '1st Year'), (2, '2nd Year'), (3, '3rd Year'), (4, '4th Year'), (5, '5th Year')], unique=True)),
                ('secSem', models.CharField(choices=[(1, '1st Semester'), (2, '2nd Semester')], max_length=15, unique=True)),
                ('secSubUniqueSec', models.CharField(choices=[(0, 'FA1'), (1, 'FA2'), (2, 'FA3'), (3, 'FA4'), (4, 'FA5'), (5, 'FA6'), (7, 'FA7'), (8, 'FA8'), (9, 'FA9'), (10, 'FB1'), (11, 'FB2'), (12, 'FB3'), (13, 'FB4'), (14, 'FB5'), (15, 'FB6'), (17, 'FB7'), (18, 'FB8'), (19, 'FB9'), (20, 'FC1'), (21, 'FC2'), (22, 'FC3'), (23, 'FC4'), (24, 'FC5'), (25, 'FC6'), (27, 'FC7'), (28, 'FC8'), (29, 'FC9')], max_length=3, unique=True)),
                ('secSubReferrable', models.CharField(max_length=5, unique=True, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.MaxLengthValidator(5)])),
            ],
            options={
                'unique_together': {('secBaseProg', 'secYear', 'secSem', 'secSubUniqueSec')},
            },
        ),
        migrations.CreateModel(
            name='CourseSchedules',
            fields=[
                ('courseSch_CourseCode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='SmartClassroomInterface.CourseSets')),
                ('courseSch_Handler', models.CharField(max_length=50, unique=True, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.MaxLengthValidator(50)])),
                ('courseSch_DayLect', models.CharField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')], default=(1, 'Monday'), max_length=10, unique=True)),
                ('courseSch_sched_startTime', models.TimeField(unique=True)),
                ('courseSch_sched_startEnd', models.TimeField(unique=True)),
            ],
            options={
                'unique_together': {('courseSch_Handler', 'courseSch_DayLect', 'courseSch_sched_startTime', 'courseSch_sched_startEnd')},
            },
        ),
        migrations.CreateModel(
            name='ClassroomLogger',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ActionTaken', models.CharField(choices=[(0, 'Opened Classroom'), (1, 'Closed Classroom'), (2, 'Action: Automatically Set as Open on Time'), (3, 'Action: Automatically Set as Closed on Time'), (4, 'Authorized Staff Entry'), (5, 'Authorized Teacher Entry'), (6, 'Disabled Access Entry'), (7, 'Enabled Access Entry'), (8, 'Classroom Access is set to Disabled.'), (9, 'Classroom Access is Disabled.'), (10, 'Forbidden Attempt To Entry Detected.'), (11, 'Unauthorized Access Detected.')], max_length=255)),
                ('ClassroomRefer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SmartClassroomInterface.Classroom', to_field='roomClassReferrable')),
                ('CourseRefer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='CourseAssociated', to='SmartClassroomInterface.CourseSchedules')),
                ('HandlerRefer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='HandlerAssociate', to='SmartClassroomInterface.CourseSchedules', to_field='courseSch_Handler')),
                ('SectionRefer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='StudentGroupAssociate', to='SmartClassroomInterface.SectionGroups', to_field='secSubReferrable')),
                ('TimeEndRefer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TimeEndEvent', to='SmartClassroomInterface.CourseSchedules', to_field='courseSch_sched_startEnd')),
                ('TimeStartRefer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TimeStartEvent', to='SmartClassroomInterface.CourseSchedules', to_field='courseSch_sched_startTime')),
            ],
        ),
    ]
